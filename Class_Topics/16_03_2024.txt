
ex 1)
//Given a number N ,set ith bit of it 
 
function setIthBit( N,i){
    return N|(1<<i);

}
let N = 21//binary value 10101
let i = 3 // 0 based 
let result = setIthBit(N,i);
console.log(result); //out put:29  binary value=11101

ex2)
////Given a number N ,unset ith bit of it
 //given a number N unset ith bit of it 
function unsetIthBit( N,i){
    return N & ~ (1<<i);

}
let N = 21//binary value 10101
let i = 2 // 0 based 
let result = unsetIthBit(N,i);
console.log(result); //out put:17  binary value=10001

Hashing = storing key and value pair 
 it is manipulated in javascript as objects 
 
 Hashmap -- key:value => objects
 Hashset -- {key} => set
 
 ex 1)
 //Given an integer array print duplicate numbers
 arr = [2,2,3,1,3,4,5,6,4]
 o/p=[2,3,6]
 
 function countOccurrences(arr) {
    const occurrences = {};
    
    // Count occurrences of each element
    for (const element of arr) {
        occurrences[element] = (occurrences[element] || 0) + 1; // if element not present 
    }//occurrences[element] =0, if present then occurrences[element]= 1
    
    return occurrences;
}

// Example usage:
const array = [2,2,3,1,3,4,5,6,4];
const result = countOccurrences(array);
console.log(result); // output : { '1': 1, '2': 2, '3': 2, '4': 2, '5': 1, '6': 1 }